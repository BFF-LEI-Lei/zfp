# Confirms that zfp build generation runs correctly for the minimum required cmake version

name: test-cmake
on: push
jobs:
  build:
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            cxx_compiler: g++-10
            c_compiler: gcc-10
            target: all
            
          - os: windows-latest
            cxx_compiler: clang++
            c_compiler: clang
            target: all
            
    steps:
      - uses: actions/checkout@v2

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v1.12
        with:
          cmake-version: '3.9.x'

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          architecture: x64

      - name: Install zfpy dependencies
        run: |
          python -m pip install cython
          python -m pip install numpy

      - name: Setup MSBuild (Windows)
        id: msbuild
        if: ${{matrix.os == 'windows-latest' && matrix.cxx_compiler == 'msbuild'}}
        uses: microsoft/setup-msbuild@v1.0.3
 
      - name: Run CMake
        id: cmake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_COMPILER=${{matrix.cxx_compiler}} -DCMAKE_C_COMPILER=${{matrix.c_compiler}} -DBUILD_TESTING=ON -DZFP_WITH_OPENMP=ON -DBUILD_ZFPY=ON -DPYTHON_INCLUDE_DIR=$(python -c "from distutils.sysconfig import get_python_inc; print(get_python_inc())")  -DPYTHON_LIBRARY=$(python -c "import distutils.sysconfig as sysconfig; print(sysconfig.get_config_var('LIBDIR'))") -DBUILD_ZFORP=ON
        
      - name: Build
        id: build
        run: cmake --build ${{github.workspace}}/build --target ${{matrix.target}} --config Release
